/* soapScheduleBindingProxy.cpp
   Generated by gSOAP 2.8.45 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapScheduleBindingProxy.h"

ScheduleBindingProxy::ScheduleBindingProxy() : soap(SOAP_IO_DEFAULT)
{	ScheduleBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ScheduleBindingProxy::ScheduleBindingProxy(const ScheduleBindingProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
}

ScheduleBindingProxy::ScheduleBindingProxy(const struct soap &_soap) : soap(_soap)
{ }

ScheduleBindingProxy::ScheduleBindingProxy(const char *endpoint) : soap(SOAP_IO_DEFAULT)
{	ScheduleBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

ScheduleBindingProxy::ScheduleBindingProxy(soap_mode iomode) : soap(iomode)
{	ScheduleBindingProxy_init(iomode, iomode);
}

ScheduleBindingProxy::ScheduleBindingProxy(const char *endpoint, soap_mode iomode) : soap(iomode)
{	ScheduleBindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

ScheduleBindingProxy::ScheduleBindingProxy(soap_mode imode, soap_mode omode) : soap(imode, omode)
{	ScheduleBindingProxy_init(imode, omode);
}

ScheduleBindingProxy::~ScheduleBindingProxy()
{
	this->destroy();
	}

void ScheduleBindingProxy::ScheduleBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"wsa", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL, NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"ns10", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"ns11", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"ns6", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"ns7", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"ns8", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"ns9", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"tdn", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this, namespaces);
}

#ifndef WITH_PURE_VIRTUAL
ScheduleBindingProxy *ScheduleBindingProxy::copy()
{	ScheduleBindingProxy *dup = SOAP_NEW_COPY(ScheduleBindingProxy(*(struct soap*)this));
	return dup;
}
#endif

ScheduleBindingProxy& ScheduleBindingProxy::operator=(const ScheduleBindingProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void ScheduleBindingProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void ScheduleBindingProxy::reset()
{	this->destroy();
	soap_done(this);
	soap_initialize(this);
	ScheduleBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void ScheduleBindingProxy::soap_noheader()
{	this->header = NULL;
}

void ScheduleBindingProxy::soap_header(char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this);
	this->header->wsa__MessageID = wsa__MessageID;
	this->header->wsa__RelatesTo = wsa__RelatesTo;
	this->header->wsa__From = wsa__From;
	this->header->wsa__ReplyTo = wsa__ReplyTo;
	this->header->wsa__FaultTo = wsa__FaultTo;
	this->header->wsa__To = wsa__To;
	this->header->wsa__Action = wsa__Action;
	this->header->wsdd__AppSequence = wsdd__AppSequence;
	this->header->wsa5__MessageID = wsa5__MessageID;
	this->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->header->wsa5__From = wsa5__From;
	this->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->header->wsa5__FaultTo = wsa5__FaultTo;
	this->header->wsa5__To = wsa5__To;
	this->header->wsa5__Action = wsa5__Action;
	this->header->chan__ChannelInstance = chan__ChannelInstance;
	this->header->wsse__Security = wsse__Security;
}

::SOAP_ENV__Header *ScheduleBindingProxy::soap_header()
{	return this->header;
}

::SOAP_ENV__Fault *ScheduleBindingProxy::soap_fault()
{	return this->fault;
}

const char *ScheduleBindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *ScheduleBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int ScheduleBindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

int ScheduleBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void ScheduleBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ScheduleBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *ScheduleBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int ScheduleBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns10__GetServiceCapabilities *ns10__GetServiceCapabilities, _ns10__GetServiceCapabilitiesResponse &ns10__GetServiceCapabilitiesResponse)
{	struct soap *soap = this;
	struct __ns10__GetServiceCapabilities soap_tmp___ns10__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetServiceCapabilities";
	soap_tmp___ns10__GetServiceCapabilities.ns10__GetServiceCapabilities = ns10__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetServiceCapabilities(soap, &soap_tmp___ns10__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetServiceCapabilities(soap, &soap_tmp___ns10__GetServiceCapabilities, "-ns10:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetServiceCapabilities(soap, &soap_tmp___ns10__GetServiceCapabilities, "-ns10:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetServiceCapabilitiesResponse*>(&ns10__GetServiceCapabilitiesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetServiceCapabilitiesResponse.soap_get(soap, "ns10:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleState(const char *endpoint, const char *soap_action, _ns10__GetScheduleState *ns10__GetScheduleState, _ns10__GetScheduleStateResponse &ns10__GetScheduleStateResponse)
{	struct soap *soap = this;
	struct __ns10__GetScheduleState soap_tmp___ns10__GetScheduleState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleState";
	soap_tmp___ns10__GetScheduleState.ns10__GetScheduleState = ns10__GetScheduleState;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetScheduleState(soap, &soap_tmp___ns10__GetScheduleState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetScheduleState(soap, &soap_tmp___ns10__GetScheduleState, "-ns10:GetScheduleState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetScheduleState(soap, &soap_tmp___ns10__GetScheduleState, "-ns10:GetScheduleState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetScheduleStateResponse*>(&ns10__GetScheduleStateResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetScheduleStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetScheduleStateResponse.soap_get(soap, "ns10:GetScheduleStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleInfo(const char *endpoint, const char *soap_action, _ns10__GetScheduleInfo *ns10__GetScheduleInfo, _ns10__GetScheduleInfoResponse &ns10__GetScheduleInfoResponse)
{	struct soap *soap = this;
	struct __ns10__GetScheduleInfo soap_tmp___ns10__GetScheduleInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfo";
	soap_tmp___ns10__GetScheduleInfo.ns10__GetScheduleInfo = ns10__GetScheduleInfo;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetScheduleInfo(soap, &soap_tmp___ns10__GetScheduleInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetScheduleInfo(soap, &soap_tmp___ns10__GetScheduleInfo, "-ns10:GetScheduleInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetScheduleInfo(soap, &soap_tmp___ns10__GetScheduleInfo, "-ns10:GetScheduleInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetScheduleInfoResponse*>(&ns10__GetScheduleInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetScheduleInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetScheduleInfoResponse.soap_get(soap, "ns10:GetScheduleInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleInfoList(const char *endpoint, const char *soap_action, _ns10__GetScheduleInfoList *ns10__GetScheduleInfoList, _ns10__GetScheduleInfoListResponse &ns10__GetScheduleInfoListResponse)
{	struct soap *soap = this;
	struct __ns10__GetScheduleInfoList soap_tmp___ns10__GetScheduleInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfoList";
	soap_tmp___ns10__GetScheduleInfoList.ns10__GetScheduleInfoList = ns10__GetScheduleInfoList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetScheduleInfoList(soap, &soap_tmp___ns10__GetScheduleInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetScheduleInfoList(soap, &soap_tmp___ns10__GetScheduleInfoList, "-ns10:GetScheduleInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetScheduleInfoList(soap, &soap_tmp___ns10__GetScheduleInfoList, "-ns10:GetScheduleInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetScheduleInfoListResponse*>(&ns10__GetScheduleInfoListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetScheduleInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetScheduleInfoListResponse.soap_get(soap, "ns10:GetScheduleInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSchedules(const char *endpoint, const char *soap_action, _ns10__GetSchedules *ns10__GetSchedules, _ns10__GetSchedulesResponse &ns10__GetSchedulesResponse)
{	struct soap *soap = this;
	struct __ns10__GetSchedules soap_tmp___ns10__GetSchedules;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSchedules";
	soap_tmp___ns10__GetSchedules.ns10__GetSchedules = ns10__GetSchedules;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetSchedules(soap, &soap_tmp___ns10__GetSchedules);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetSchedules(soap, &soap_tmp___ns10__GetSchedules, "-ns10:GetSchedules", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetSchedules(soap, &soap_tmp___ns10__GetSchedules, "-ns10:GetSchedules", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetSchedulesResponse*>(&ns10__GetSchedulesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetSchedulesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetSchedulesResponse.soap_get(soap, "ns10:GetSchedulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleList(const char *endpoint, const char *soap_action, _ns10__GetScheduleList *ns10__GetScheduleList, _ns10__GetScheduleListResponse &ns10__GetScheduleListResponse)
{	struct soap *soap = this;
	struct __ns10__GetScheduleList soap_tmp___ns10__GetScheduleList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleList";
	soap_tmp___ns10__GetScheduleList.ns10__GetScheduleList = ns10__GetScheduleList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetScheduleList(soap, &soap_tmp___ns10__GetScheduleList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetScheduleList(soap, &soap_tmp___ns10__GetScheduleList, "-ns10:GetScheduleList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetScheduleList(soap, &soap_tmp___ns10__GetScheduleList, "-ns10:GetScheduleList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetScheduleListResponse*>(&ns10__GetScheduleListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetScheduleListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetScheduleListResponse.soap_get(soap, "ns10:GetScheduleListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::CreateSchedule(const char *endpoint, const char *soap_action, _ns10__CreateSchedule *ns10__CreateSchedule, _ns10__CreateScheduleResponse &ns10__CreateScheduleResponse)
{	struct soap *soap = this;
	struct __ns10__CreateSchedule soap_tmp___ns10__CreateSchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/CreateSchedule";
	soap_tmp___ns10__CreateSchedule.ns10__CreateSchedule = ns10__CreateSchedule;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__CreateSchedule(soap, &soap_tmp___ns10__CreateSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__CreateSchedule(soap, &soap_tmp___ns10__CreateSchedule, "-ns10:CreateSchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__CreateSchedule(soap, &soap_tmp___ns10__CreateSchedule, "-ns10:CreateSchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__CreateScheduleResponse*>(&ns10__CreateScheduleResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__CreateScheduleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__CreateScheduleResponse.soap_get(soap, "ns10:CreateScheduleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::ModifySchedule(const char *endpoint, const char *soap_action, _ns10__ModifySchedule *ns10__ModifySchedule, _ns10__ModifyScheduleResponse &ns10__ModifyScheduleResponse)
{	struct soap *soap = this;
	struct __ns10__ModifySchedule soap_tmp___ns10__ModifySchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/ModifySchedule";
	soap_tmp___ns10__ModifySchedule.ns10__ModifySchedule = ns10__ModifySchedule;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__ModifySchedule(soap, &soap_tmp___ns10__ModifySchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__ModifySchedule(soap, &soap_tmp___ns10__ModifySchedule, "-ns10:ModifySchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__ModifySchedule(soap, &soap_tmp___ns10__ModifySchedule, "-ns10:ModifySchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__ModifyScheduleResponse*>(&ns10__ModifyScheduleResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__ModifyScheduleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__ModifyScheduleResponse.soap_get(soap, "ns10:ModifyScheduleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::DeleteSchedule(const char *endpoint, const char *soap_action, _ns10__DeleteSchedule *ns10__DeleteSchedule, _ns10__DeleteScheduleResponse &ns10__DeleteScheduleResponse)
{	struct soap *soap = this;
	struct __ns10__DeleteSchedule soap_tmp___ns10__DeleteSchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/DeleteSchedule";
	soap_tmp___ns10__DeleteSchedule.ns10__DeleteSchedule = ns10__DeleteSchedule;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__DeleteSchedule(soap, &soap_tmp___ns10__DeleteSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__DeleteSchedule(soap, &soap_tmp___ns10__DeleteSchedule, "-ns10:DeleteSchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__DeleteSchedule(soap, &soap_tmp___ns10__DeleteSchedule, "-ns10:DeleteSchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__DeleteScheduleResponse*>(&ns10__DeleteScheduleResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__DeleteScheduleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__DeleteScheduleResponse.soap_get(soap, "ns10:DeleteScheduleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroupInfo(const char *endpoint, const char *soap_action, _ns10__GetSpecialDayGroupInfo *ns10__GetSpecialDayGroupInfo, _ns10__GetSpecialDayGroupInfoResponse &ns10__GetSpecialDayGroupInfoResponse)
{	struct soap *soap = this;
	struct __ns10__GetSpecialDayGroupInfo soap_tmp___ns10__GetSpecialDayGroupInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfo";
	soap_tmp___ns10__GetSpecialDayGroupInfo.ns10__GetSpecialDayGroupInfo = ns10__GetSpecialDayGroupInfo;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetSpecialDayGroupInfo(soap, &soap_tmp___ns10__GetSpecialDayGroupInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetSpecialDayGroupInfo(soap, &soap_tmp___ns10__GetSpecialDayGroupInfo, "-ns10:GetSpecialDayGroupInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetSpecialDayGroupInfo(soap, &soap_tmp___ns10__GetSpecialDayGroupInfo, "-ns10:GetSpecialDayGroupInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetSpecialDayGroupInfoResponse*>(&ns10__GetSpecialDayGroupInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetSpecialDayGroupInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetSpecialDayGroupInfoResponse.soap_get(soap, "ns10:GetSpecialDayGroupInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroupInfoList(const char *endpoint, const char *soap_action, _ns10__GetSpecialDayGroupInfoList *ns10__GetSpecialDayGroupInfoList, _ns10__GetSpecialDayGroupInfoListResponse &ns10__GetSpecialDayGroupInfoListResponse)
{	struct soap *soap = this;
	struct __ns10__GetSpecialDayGroupInfoList soap_tmp___ns10__GetSpecialDayGroupInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfoList";
	soap_tmp___ns10__GetSpecialDayGroupInfoList.ns10__GetSpecialDayGroupInfoList = ns10__GetSpecialDayGroupInfoList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetSpecialDayGroupInfoList(soap, &soap_tmp___ns10__GetSpecialDayGroupInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetSpecialDayGroupInfoList(soap, &soap_tmp___ns10__GetSpecialDayGroupInfoList, "-ns10:GetSpecialDayGroupInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetSpecialDayGroupInfoList(soap, &soap_tmp___ns10__GetSpecialDayGroupInfoList, "-ns10:GetSpecialDayGroupInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetSpecialDayGroupInfoListResponse*>(&ns10__GetSpecialDayGroupInfoListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetSpecialDayGroupInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetSpecialDayGroupInfoListResponse.soap_get(soap, "ns10:GetSpecialDayGroupInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroups(const char *endpoint, const char *soap_action, _ns10__GetSpecialDayGroups *ns10__GetSpecialDayGroups, _ns10__GetSpecialDayGroupsResponse &ns10__GetSpecialDayGroupsResponse)
{	struct soap *soap = this;
	struct __ns10__GetSpecialDayGroups soap_tmp___ns10__GetSpecialDayGroups;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroups";
	soap_tmp___ns10__GetSpecialDayGroups.ns10__GetSpecialDayGroups = ns10__GetSpecialDayGroups;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetSpecialDayGroups(soap, &soap_tmp___ns10__GetSpecialDayGroups);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetSpecialDayGroups(soap, &soap_tmp___ns10__GetSpecialDayGroups, "-ns10:GetSpecialDayGroups", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetSpecialDayGroups(soap, &soap_tmp___ns10__GetSpecialDayGroups, "-ns10:GetSpecialDayGroups", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetSpecialDayGroupsResponse*>(&ns10__GetSpecialDayGroupsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetSpecialDayGroupsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetSpecialDayGroupsResponse.soap_get(soap, "ns10:GetSpecialDayGroupsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroupList(const char *endpoint, const char *soap_action, _ns10__GetSpecialDayGroupList *ns10__GetSpecialDayGroupList, _ns10__GetSpecialDayGroupListResponse &ns10__GetSpecialDayGroupListResponse)
{	struct soap *soap = this;
	struct __ns10__GetSpecialDayGroupList soap_tmp___ns10__GetSpecialDayGroupList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupList";
	soap_tmp___ns10__GetSpecialDayGroupList.ns10__GetSpecialDayGroupList = ns10__GetSpecialDayGroupList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetSpecialDayGroupList(soap, &soap_tmp___ns10__GetSpecialDayGroupList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetSpecialDayGroupList(soap, &soap_tmp___ns10__GetSpecialDayGroupList, "-ns10:GetSpecialDayGroupList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetSpecialDayGroupList(soap, &soap_tmp___ns10__GetSpecialDayGroupList, "-ns10:GetSpecialDayGroupList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetSpecialDayGroupListResponse*>(&ns10__GetSpecialDayGroupListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetSpecialDayGroupListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetSpecialDayGroupListResponse.soap_get(soap, "ns10:GetSpecialDayGroupListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::CreateSpecialDayGroup(const char *endpoint, const char *soap_action, _ns10__CreateSpecialDayGroup *ns10__CreateSpecialDayGroup, _ns10__CreateSpecialDayGroupResponse &ns10__CreateSpecialDayGroupResponse)
{	struct soap *soap = this;
	struct __ns10__CreateSpecialDayGroup soap_tmp___ns10__CreateSpecialDayGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/CreateSpecialDayGroup";
	soap_tmp___ns10__CreateSpecialDayGroup.ns10__CreateSpecialDayGroup = ns10__CreateSpecialDayGroup;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__CreateSpecialDayGroup(soap, &soap_tmp___ns10__CreateSpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__CreateSpecialDayGroup(soap, &soap_tmp___ns10__CreateSpecialDayGroup, "-ns10:CreateSpecialDayGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__CreateSpecialDayGroup(soap, &soap_tmp___ns10__CreateSpecialDayGroup, "-ns10:CreateSpecialDayGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__CreateSpecialDayGroupResponse*>(&ns10__CreateSpecialDayGroupResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__CreateSpecialDayGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__CreateSpecialDayGroupResponse.soap_get(soap, "ns10:CreateSpecialDayGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::ModifySpecialDayGroup(const char *endpoint, const char *soap_action, _ns10__ModifySpecialDayGroup *ns10__ModifySpecialDayGroup, _ns10__ModifySpecialDayGroupResponse &ns10__ModifySpecialDayGroupResponse)
{	struct soap *soap = this;
	struct __ns10__ModifySpecialDayGroup soap_tmp___ns10__ModifySpecialDayGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/ModifySpecialDayGroup";
	soap_tmp___ns10__ModifySpecialDayGroup.ns10__ModifySpecialDayGroup = ns10__ModifySpecialDayGroup;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__ModifySpecialDayGroup(soap, &soap_tmp___ns10__ModifySpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__ModifySpecialDayGroup(soap, &soap_tmp___ns10__ModifySpecialDayGroup, "-ns10:ModifySpecialDayGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__ModifySpecialDayGroup(soap, &soap_tmp___ns10__ModifySpecialDayGroup, "-ns10:ModifySpecialDayGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__ModifySpecialDayGroupResponse*>(&ns10__ModifySpecialDayGroupResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__ModifySpecialDayGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__ModifySpecialDayGroupResponse.soap_get(soap, "ns10:ModifySpecialDayGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::DeleteSpecialDayGroup(const char *endpoint, const char *soap_action, _ns10__DeleteSpecialDayGroup *ns10__DeleteSpecialDayGroup, _ns10__DeleteSpecialDayGroupResponse &ns10__DeleteSpecialDayGroupResponse)
{	struct soap *soap = this;
	struct __ns10__DeleteSpecialDayGroup soap_tmp___ns10__DeleteSpecialDayGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/DeleteSpecialDayGroup";
	soap_tmp___ns10__DeleteSpecialDayGroup.ns10__DeleteSpecialDayGroup = ns10__DeleteSpecialDayGroup;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__DeleteSpecialDayGroup(soap, &soap_tmp___ns10__DeleteSpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__DeleteSpecialDayGroup(soap, &soap_tmp___ns10__DeleteSpecialDayGroup, "-ns10:DeleteSpecialDayGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__DeleteSpecialDayGroup(soap, &soap_tmp___ns10__DeleteSpecialDayGroup, "-ns10:DeleteSpecialDayGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__DeleteSpecialDayGroupResponse*>(&ns10__DeleteSpecialDayGroupResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__DeleteSpecialDayGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__DeleteSpecialDayGroupResponse.soap_get(soap, "ns10:DeleteSpecialDayGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
