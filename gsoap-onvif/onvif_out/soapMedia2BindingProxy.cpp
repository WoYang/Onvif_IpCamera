/* soapMedia2BindingProxy.cpp
   Generated by gSOAP 2.8.45 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapMedia2BindingProxy.h"

Media2BindingProxy::Media2BindingProxy() : soap(SOAP_IO_DEFAULT)
{	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

Media2BindingProxy::Media2BindingProxy(const Media2BindingProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
}

Media2BindingProxy::Media2BindingProxy(const struct soap &_soap) : soap(_soap)
{ }

Media2BindingProxy::Media2BindingProxy(const char *endpoint) : soap(SOAP_IO_DEFAULT)
{	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

Media2BindingProxy::Media2BindingProxy(soap_mode iomode) : soap(iomode)
{	Media2BindingProxy_init(iomode, iomode);
}

Media2BindingProxy::Media2BindingProxy(const char *endpoint, soap_mode iomode) : soap(iomode)
{	Media2BindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

Media2BindingProxy::Media2BindingProxy(soap_mode imode, soap_mode omode) : soap(imode, omode)
{	Media2BindingProxy_init(imode, omode);
}

Media2BindingProxy::~Media2BindingProxy()
{
	this->destroy();
	}

void Media2BindingProxy::Media2BindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"wsa", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL, NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"ns10", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"ns11", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"ns6", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"ns7", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"ns8", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"ns9", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"tdn", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this, namespaces);
}

#ifndef WITH_PURE_VIRTUAL
Media2BindingProxy *Media2BindingProxy::copy()
{	Media2BindingProxy *dup = SOAP_NEW_COPY(Media2BindingProxy(*(struct soap*)this));
	return dup;
}
#endif

Media2BindingProxy& Media2BindingProxy::operator=(const Media2BindingProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void Media2BindingProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void Media2BindingProxy::reset()
{	this->destroy();
	soap_done(this);
	soap_initialize(this);
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void Media2BindingProxy::soap_noheader()
{	this->header = NULL;
}

void Media2BindingProxy::soap_header(char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this);
	this->header->wsa__MessageID = wsa__MessageID;
	this->header->wsa__RelatesTo = wsa__RelatesTo;
	this->header->wsa__From = wsa__From;
	this->header->wsa__ReplyTo = wsa__ReplyTo;
	this->header->wsa__FaultTo = wsa__FaultTo;
	this->header->wsa__To = wsa__To;
	this->header->wsa__Action = wsa__Action;
	this->header->wsdd__AppSequence = wsdd__AppSequence;
	this->header->wsa5__MessageID = wsa5__MessageID;
	this->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->header->wsa5__From = wsa5__From;
	this->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->header->wsa5__FaultTo = wsa5__FaultTo;
	this->header->wsa5__To = wsa5__To;
	this->header->wsa5__Action = wsa5__Action;
	this->header->chan__ChannelInstance = chan__ChannelInstance;
	this->header->wsse__Security = wsse__Security;
}

::SOAP_ENV__Header *Media2BindingProxy::soap_header()
{	return this->header;
}

::SOAP_ENV__Fault *Media2BindingProxy::soap_fault()
{	return this->fault;
}

const char *Media2BindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *Media2BindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int Media2BindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

int Media2BindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void Media2BindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void Media2BindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *Media2BindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int Media2BindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns8__GetServiceCapabilities *ns8__GetServiceCapabilities, _ns8__GetServiceCapabilitiesResponse &ns8__GetServiceCapabilitiesResponse)
{	struct soap *soap = this;
	struct __ns8__GetServiceCapabilities soap_tmp___ns8__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilities";
	soap_tmp___ns8__GetServiceCapabilities.ns8__GetServiceCapabilities = ns8__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetServiceCapabilities(soap, &soap_tmp___ns8__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetServiceCapabilities(soap, &soap_tmp___ns8__GetServiceCapabilities, "-ns8:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetServiceCapabilities(soap, &soap_tmp___ns8__GetServiceCapabilities, "-ns8:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetServiceCapabilitiesResponse*>(&ns8__GetServiceCapabilitiesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetServiceCapabilitiesResponse.soap_get(soap, "ns8:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::CreateProfile(const char *endpoint, const char *soap_action, _ns8__CreateProfile *ns8__CreateProfile, _ns8__CreateProfileResponse &ns8__CreateProfileResponse)
{	struct soap *soap = this;
	struct __ns8__CreateProfile soap_tmp___ns8__CreateProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateProfile";
	soap_tmp___ns8__CreateProfile.ns8__CreateProfile = ns8__CreateProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__CreateProfile(soap, &soap_tmp___ns8__CreateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__CreateProfile(soap, &soap_tmp___ns8__CreateProfile, "-ns8:CreateProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__CreateProfile(soap, &soap_tmp___ns8__CreateProfile, "-ns8:CreateProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__CreateProfileResponse*>(&ns8__CreateProfileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__CreateProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__CreateProfileResponse.soap_get(soap, "ns8:CreateProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetProfiles(const char *endpoint, const char *soap_action, _ns8__GetProfiles *ns8__GetProfiles, _ns8__GetProfilesResponse &ns8__GetProfilesResponse)
{	struct soap *soap = this;
	struct __ns8__GetProfiles soap_tmp___ns8__GetProfiles;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetProfiles";
	soap_tmp___ns8__GetProfiles.ns8__GetProfiles = ns8__GetProfiles;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetProfiles(soap, &soap_tmp___ns8__GetProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetProfiles(soap, &soap_tmp___ns8__GetProfiles, "-ns8:GetProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetProfiles(soap, &soap_tmp___ns8__GetProfiles, "-ns8:GetProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetProfilesResponse*>(&ns8__GetProfilesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetProfilesResponse.soap_get(soap, "ns8:GetProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::AddConfiguration(const char *endpoint, const char *soap_action, _ns8__AddConfiguration *ns8__AddConfiguration, _ns8__AddConfigurationResponse &ns8__AddConfigurationResponse)
{	struct soap *soap = this;
	struct __ns8__AddConfiguration soap_tmp___ns8__AddConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/AddConfiguration";
	soap_tmp___ns8__AddConfiguration.ns8__AddConfiguration = ns8__AddConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__AddConfiguration(soap, &soap_tmp___ns8__AddConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__AddConfiguration(soap, &soap_tmp___ns8__AddConfiguration, "-ns8:AddConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__AddConfiguration(soap, &soap_tmp___ns8__AddConfiguration, "-ns8:AddConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__AddConfigurationResponse*>(&ns8__AddConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__AddConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__AddConfigurationResponse.soap_get(soap, "ns8:AddConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::RemoveConfiguration(const char *endpoint, const char *soap_action, _ns8__RemoveConfiguration *ns8__RemoveConfiguration, _ns8__RemoveConfigurationResponse &ns8__RemoveConfigurationResponse)
{	struct soap *soap = this;
	struct __ns8__RemoveConfiguration soap_tmp___ns8__RemoveConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/RemoveConfiguration";
	soap_tmp___ns8__RemoveConfiguration.ns8__RemoveConfiguration = ns8__RemoveConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__RemoveConfiguration(soap, &soap_tmp___ns8__RemoveConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__RemoveConfiguration(soap, &soap_tmp___ns8__RemoveConfiguration, "-ns8:RemoveConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__RemoveConfiguration(soap, &soap_tmp___ns8__RemoveConfiguration, "-ns8:RemoveConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__RemoveConfigurationResponse*>(&ns8__RemoveConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__RemoveConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__RemoveConfigurationResponse.soap_get(soap, "ns8:RemoveConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::DeleteProfile(const char *endpoint, const char *soap_action, _ns8__DeleteProfile *ns8__DeleteProfile, _ns8__DeleteProfileResponse &ns8__DeleteProfileResponse)
{	struct soap *soap = this;
	struct __ns8__DeleteProfile soap_tmp___ns8__DeleteProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteProfile";
	soap_tmp___ns8__DeleteProfile.ns8__DeleteProfile = ns8__DeleteProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__DeleteProfile(soap, &soap_tmp___ns8__DeleteProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__DeleteProfile(soap, &soap_tmp___ns8__DeleteProfile, "-ns8:DeleteProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__DeleteProfile(soap, &soap_tmp___ns8__DeleteProfile, "-ns8:DeleteProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__DeleteProfileResponse*>(&ns8__DeleteProfileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__DeleteProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__DeleteProfileResponse.soap_get(soap, "ns8:DeleteProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoSourceConfigurations(const char *endpoint, const char *soap_action, ns8__GetConfiguration *ns8__GetVideoSourceConfigurations, _ns8__GetVideoSourceConfigurationsResponse &ns8__GetVideoSourceConfigurationsResponse)
{	struct soap *soap = this;
	struct __ns8__GetVideoSourceConfigurations soap_tmp___ns8__GetVideoSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurations";
	soap_tmp___ns8__GetVideoSourceConfigurations.ns8__GetVideoSourceConfigurations = ns8__GetVideoSourceConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetVideoSourceConfigurations(soap, &soap_tmp___ns8__GetVideoSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetVideoSourceConfigurations(soap, &soap_tmp___ns8__GetVideoSourceConfigurations, "-ns8:GetVideoSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetVideoSourceConfigurations(soap, &soap_tmp___ns8__GetVideoSourceConfigurations, "-ns8:GetVideoSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetVideoSourceConfigurationsResponse*>(&ns8__GetVideoSourceConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetVideoSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetVideoSourceConfigurationsResponse.soap_get(soap, "ns8:GetVideoSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoEncoderConfigurations(const char *endpoint, const char *soap_action, ns8__GetConfiguration *ns8__GetVideoEncoderConfigurations, _ns8__GetVideoEncoderConfigurationsResponse &ns8__GetVideoEncoderConfigurationsResponse)
{	struct soap *soap = this;
	struct __ns8__GetVideoEncoderConfigurations soap_tmp___ns8__GetVideoEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurations";
	soap_tmp___ns8__GetVideoEncoderConfigurations.ns8__GetVideoEncoderConfigurations = ns8__GetVideoEncoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetVideoEncoderConfigurations(soap, &soap_tmp___ns8__GetVideoEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetVideoEncoderConfigurations(soap, &soap_tmp___ns8__GetVideoEncoderConfigurations, "-ns8:GetVideoEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetVideoEncoderConfigurations(soap, &soap_tmp___ns8__GetVideoEncoderConfigurations, "-ns8:GetVideoEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetVideoEncoderConfigurationsResponse*>(&ns8__GetVideoEncoderConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetVideoEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetVideoEncoderConfigurationsResponse.soap_get(soap, "ns8:GetVideoEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioSourceConfigurations(const char *endpoint, const char *soap_action, ns8__GetConfiguration *ns8__GetAudioSourceConfigurations, _ns8__GetAudioSourceConfigurationsResponse &ns8__GetAudioSourceConfigurationsResponse)
{	struct soap *soap = this;
	struct __ns8__GetAudioSourceConfigurations soap_tmp___ns8__GetAudioSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurations/";
	soap_tmp___ns8__GetAudioSourceConfigurations.ns8__GetAudioSourceConfigurations = ns8__GetAudioSourceConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetAudioSourceConfigurations(soap, &soap_tmp___ns8__GetAudioSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetAudioSourceConfigurations(soap, &soap_tmp___ns8__GetAudioSourceConfigurations, "-ns8:GetAudioSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetAudioSourceConfigurations(soap, &soap_tmp___ns8__GetAudioSourceConfigurations, "-ns8:GetAudioSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetAudioSourceConfigurationsResponse*>(&ns8__GetAudioSourceConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetAudioSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetAudioSourceConfigurationsResponse.soap_get(soap, "ns8:GetAudioSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioEncoderConfigurations(const char *endpoint, const char *soap_action, ns8__GetConfiguration *ns8__GetAudioEncoderConfigurations, _ns8__GetAudioEncoderConfigurationsResponse &ns8__GetAudioEncoderConfigurationsResponse)
{	struct soap *soap = this;
	struct __ns8__GetAudioEncoderConfigurations soap_tmp___ns8__GetAudioEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurations";
	soap_tmp___ns8__GetAudioEncoderConfigurations.ns8__GetAudioEncoderConfigurations = ns8__GetAudioEncoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetAudioEncoderConfigurations(soap, &soap_tmp___ns8__GetAudioEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetAudioEncoderConfigurations(soap, &soap_tmp___ns8__GetAudioEncoderConfigurations, "-ns8:GetAudioEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetAudioEncoderConfigurations(soap, &soap_tmp___ns8__GetAudioEncoderConfigurations, "-ns8:GetAudioEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetAudioEncoderConfigurationsResponse*>(&ns8__GetAudioEncoderConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetAudioEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetAudioEncoderConfigurationsResponse.soap_get(soap, "ns8:GetAudioEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAnalyticsConfigurations(const char *endpoint, const char *soap_action, ns8__GetConfiguration *ns8__GetAnalyticsConfigurations, _ns8__GetAnalyticsConfigurationsResponse &ns8__GetAnalyticsConfigurationsResponse)
{	struct soap *soap = this;
	struct __ns8__GetAnalyticsConfigurations soap_tmp___ns8__GetAnalyticsConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurations";
	soap_tmp___ns8__GetAnalyticsConfigurations.ns8__GetAnalyticsConfigurations = ns8__GetAnalyticsConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetAnalyticsConfigurations(soap, &soap_tmp___ns8__GetAnalyticsConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetAnalyticsConfigurations(soap, &soap_tmp___ns8__GetAnalyticsConfigurations, "-ns8:GetAnalyticsConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetAnalyticsConfigurations(soap, &soap_tmp___ns8__GetAnalyticsConfigurations, "-ns8:GetAnalyticsConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetAnalyticsConfigurationsResponse*>(&ns8__GetAnalyticsConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetAnalyticsConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetAnalyticsConfigurationsResponse.soap_get(soap, "ns8:GetAnalyticsConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetMetadataConfigurations(const char *endpoint, const char *soap_action, ns8__GetConfiguration *ns8__GetMetadataConfigurations, _ns8__GetMetadataConfigurationsResponse &ns8__GetMetadataConfigurationsResponse)
{	struct soap *soap = this;
	struct __ns8__GetMetadataConfigurations soap_tmp___ns8__GetMetadataConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurations";
	soap_tmp___ns8__GetMetadataConfigurations.ns8__GetMetadataConfigurations = ns8__GetMetadataConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetMetadataConfigurations(soap, &soap_tmp___ns8__GetMetadataConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetMetadataConfigurations(soap, &soap_tmp___ns8__GetMetadataConfigurations, "-ns8:GetMetadataConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetMetadataConfigurations(soap, &soap_tmp___ns8__GetMetadataConfigurations, "-ns8:GetMetadataConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetMetadataConfigurationsResponse*>(&ns8__GetMetadataConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetMetadataConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetMetadataConfigurationsResponse.soap_get(soap, "ns8:GetMetadataConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioOutputConfigurations(const char *endpoint, const char *soap_action, ns8__GetConfiguration *ns8__GetAudioOutputConfigurations, _ns8__GetAudioOutputConfigurationsResponse &ns8__GetAudioOutputConfigurationsResponse)
{	struct soap *soap = this;
	struct __ns8__GetAudioOutputConfigurations soap_tmp___ns8__GetAudioOutputConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurations";
	soap_tmp___ns8__GetAudioOutputConfigurations.ns8__GetAudioOutputConfigurations = ns8__GetAudioOutputConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetAudioOutputConfigurations(soap, &soap_tmp___ns8__GetAudioOutputConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetAudioOutputConfigurations(soap, &soap_tmp___ns8__GetAudioOutputConfigurations, "-ns8:GetAudioOutputConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetAudioOutputConfigurations(soap, &soap_tmp___ns8__GetAudioOutputConfigurations, "-ns8:GetAudioOutputConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetAudioOutputConfigurationsResponse*>(&ns8__GetAudioOutputConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetAudioOutputConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetAudioOutputConfigurationsResponse.soap_get(soap, "ns8:GetAudioOutputConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioDecoderConfigurations(const char *endpoint, const char *soap_action, ns8__GetConfiguration *ns8__GetAudioDecoderConfigurations, _ns8__GetAudioDecoderConfigurationsResponse &ns8__GetAudioDecoderConfigurationsResponse)
{	struct soap *soap = this;
	struct __ns8__GetAudioDecoderConfigurations soap_tmp___ns8__GetAudioDecoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurations";
	soap_tmp___ns8__GetAudioDecoderConfigurations.ns8__GetAudioDecoderConfigurations = ns8__GetAudioDecoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetAudioDecoderConfigurations(soap, &soap_tmp___ns8__GetAudioDecoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetAudioDecoderConfigurations(soap, &soap_tmp___ns8__GetAudioDecoderConfigurations, "-ns8:GetAudioDecoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetAudioDecoderConfigurations(soap, &soap_tmp___ns8__GetAudioDecoderConfigurations, "-ns8:GetAudioDecoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetAudioDecoderConfigurationsResponse*>(&ns8__GetAudioDecoderConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetAudioDecoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetAudioDecoderConfigurationsResponse.soap_get(soap, "ns8:GetAudioDecoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetVideoSourceConfiguration(const char *endpoint, const char *soap_action, _ns8__SetVideoSourceConfiguration *ns8__SetVideoSourceConfiguration, ns8__SetConfigurationResponse &ns8__SetVideoSourceConfigurationResponse)
{	struct soap *soap = this;
	struct __ns8__SetVideoSourceConfiguration soap_tmp___ns8__SetVideoSourceConfiguration;
	struct __ns8__SetVideoSourceConfigurationResponse *soap_tmp___ns8__SetVideoSourceConfigurationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfiguration";
	soap_tmp___ns8__SetVideoSourceConfiguration.ns8__SetVideoSourceConfiguration = ns8__SetVideoSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__SetVideoSourceConfiguration(soap, &soap_tmp___ns8__SetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SetVideoSourceConfiguration(soap, &soap_tmp___ns8__SetVideoSourceConfiguration, "-ns8:SetVideoSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SetVideoSourceConfiguration(soap, &soap_tmp___ns8__SetVideoSourceConfiguration, "-ns8:SetVideoSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns8__SetConfigurationResponse*>(&ns8__SetVideoSourceConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__SetVideoSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns8__SetVideoSourceConfigurationResponse = soap_get___ns8__SetVideoSourceConfigurationResponse(soap, NULL, "-ns8:SetVideoSourceConfigurationResponse", NULL);
	if (!soap_tmp___ns8__SetVideoSourceConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns8__SetVideoSourceConfigurationResponse = soap_tmp___ns8__SetVideoSourceConfigurationResponse->ns8__SetVideoSourceConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::SetVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _ns8__SetVideoEncoderConfiguration *ns8__SetVideoEncoderConfiguration, ns8__SetConfigurationResponse &ns8__SetVideoEncoderConfigurationResponse)
{	struct soap *soap = this;
	struct __ns8__SetVideoEncoderConfiguration soap_tmp___ns8__SetVideoEncoderConfiguration;
	struct __ns8__SetVideoEncoderConfigurationResponse *soap_tmp___ns8__SetVideoEncoderConfigurationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfiguration";
	soap_tmp___ns8__SetVideoEncoderConfiguration.ns8__SetVideoEncoderConfiguration = ns8__SetVideoEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__SetVideoEncoderConfiguration(soap, &soap_tmp___ns8__SetVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SetVideoEncoderConfiguration(soap, &soap_tmp___ns8__SetVideoEncoderConfiguration, "-ns8:SetVideoEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SetVideoEncoderConfiguration(soap, &soap_tmp___ns8__SetVideoEncoderConfiguration, "-ns8:SetVideoEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns8__SetConfigurationResponse*>(&ns8__SetVideoEncoderConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__SetVideoEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns8__SetVideoEncoderConfigurationResponse = soap_get___ns8__SetVideoEncoderConfigurationResponse(soap, NULL, "-ns8:SetVideoEncoderConfigurationResponse", NULL);
	if (!soap_tmp___ns8__SetVideoEncoderConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns8__SetVideoEncoderConfigurationResponse = soap_tmp___ns8__SetVideoEncoderConfigurationResponse->ns8__SetVideoEncoderConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioSourceConfiguration(const char *endpoint, const char *soap_action, _ns8__SetAudioSourceConfiguration *ns8__SetAudioSourceConfiguration, ns8__SetConfigurationResponse &ns8__SetAudioSourceConfigurationResponse)
{	struct soap *soap = this;
	struct __ns8__SetAudioSourceConfiguration soap_tmp___ns8__SetAudioSourceConfiguration;
	struct __ns8__SetAudioSourceConfigurationResponse *soap_tmp___ns8__SetAudioSourceConfigurationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfiguration";
	soap_tmp___ns8__SetAudioSourceConfiguration.ns8__SetAudioSourceConfiguration = ns8__SetAudioSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__SetAudioSourceConfiguration(soap, &soap_tmp___ns8__SetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SetAudioSourceConfiguration(soap, &soap_tmp___ns8__SetAudioSourceConfiguration, "-ns8:SetAudioSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SetAudioSourceConfiguration(soap, &soap_tmp___ns8__SetAudioSourceConfiguration, "-ns8:SetAudioSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns8__SetConfigurationResponse*>(&ns8__SetAudioSourceConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__SetAudioSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns8__SetAudioSourceConfigurationResponse = soap_get___ns8__SetAudioSourceConfigurationResponse(soap, NULL, "-ns8:SetAudioSourceConfigurationResponse", NULL);
	if (!soap_tmp___ns8__SetAudioSourceConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns8__SetAudioSourceConfigurationResponse = soap_tmp___ns8__SetAudioSourceConfigurationResponse->ns8__SetAudioSourceConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _ns8__SetAudioEncoderConfiguration *ns8__SetAudioEncoderConfiguration, ns8__SetConfigurationResponse &ns8__SetAudioEncoderConfigurationResponse)
{	struct soap *soap = this;
	struct __ns8__SetAudioEncoderConfiguration soap_tmp___ns8__SetAudioEncoderConfiguration;
	struct __ns8__SetAudioEncoderConfigurationResponse *soap_tmp___ns8__SetAudioEncoderConfigurationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfiguration";
	soap_tmp___ns8__SetAudioEncoderConfiguration.ns8__SetAudioEncoderConfiguration = ns8__SetAudioEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__SetAudioEncoderConfiguration(soap, &soap_tmp___ns8__SetAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SetAudioEncoderConfiguration(soap, &soap_tmp___ns8__SetAudioEncoderConfiguration, "-ns8:SetAudioEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SetAudioEncoderConfiguration(soap, &soap_tmp___ns8__SetAudioEncoderConfiguration, "-ns8:SetAudioEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns8__SetConfigurationResponse*>(&ns8__SetAudioEncoderConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__SetAudioEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns8__SetAudioEncoderConfigurationResponse = soap_get___ns8__SetAudioEncoderConfigurationResponse(soap, NULL, "-ns8:SetAudioEncoderConfigurationResponse", NULL);
	if (!soap_tmp___ns8__SetAudioEncoderConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns8__SetAudioEncoderConfigurationResponse = soap_tmp___ns8__SetAudioEncoderConfigurationResponse->ns8__SetAudioEncoderConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::SetMetadataConfiguration(const char *endpoint, const char *soap_action, _ns8__SetMetadataConfiguration *ns8__SetMetadataConfiguration, ns8__SetConfigurationResponse &ns8__SetMetadataConfigurationResponse)
{	struct soap *soap = this;
	struct __ns8__SetMetadataConfiguration soap_tmp___ns8__SetMetadataConfiguration;
	struct __ns8__SetMetadataConfigurationResponse *soap_tmp___ns8__SetMetadataConfigurationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetMetadataConfiguration";
	soap_tmp___ns8__SetMetadataConfiguration.ns8__SetMetadataConfiguration = ns8__SetMetadataConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__SetMetadataConfiguration(soap, &soap_tmp___ns8__SetMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SetMetadataConfiguration(soap, &soap_tmp___ns8__SetMetadataConfiguration, "-ns8:SetMetadataConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SetMetadataConfiguration(soap, &soap_tmp___ns8__SetMetadataConfiguration, "-ns8:SetMetadataConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns8__SetConfigurationResponse*>(&ns8__SetMetadataConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__SetMetadataConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns8__SetMetadataConfigurationResponse = soap_get___ns8__SetMetadataConfigurationResponse(soap, NULL, "-ns8:SetMetadataConfigurationResponse", NULL);
	if (!soap_tmp___ns8__SetMetadataConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns8__SetMetadataConfigurationResponse = soap_tmp___ns8__SetMetadataConfigurationResponse->ns8__SetMetadataConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioOutputConfiguration(const char *endpoint, const char *soap_action, _ns8__SetAudioOutputConfiguration *ns8__SetAudioOutputConfiguration, ns8__SetConfigurationResponse &ns8__SetAudioOutputConfigurationResponse)
{	struct soap *soap = this;
	struct __ns8__SetAudioOutputConfiguration soap_tmp___ns8__SetAudioOutputConfiguration;
	struct __ns8__SetAudioOutputConfigurationResponse *soap_tmp___ns8__SetAudioOutputConfigurationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfiguration";
	soap_tmp___ns8__SetAudioOutputConfiguration.ns8__SetAudioOutputConfiguration = ns8__SetAudioOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__SetAudioOutputConfiguration(soap, &soap_tmp___ns8__SetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SetAudioOutputConfiguration(soap, &soap_tmp___ns8__SetAudioOutputConfiguration, "-ns8:SetAudioOutputConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SetAudioOutputConfiguration(soap, &soap_tmp___ns8__SetAudioOutputConfiguration, "-ns8:SetAudioOutputConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns8__SetConfigurationResponse*>(&ns8__SetAudioOutputConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__SetAudioOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns8__SetAudioOutputConfigurationResponse = soap_get___ns8__SetAudioOutputConfigurationResponse(soap, NULL, "-ns8:SetAudioOutputConfigurationResponse", NULL);
	if (!soap_tmp___ns8__SetAudioOutputConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns8__SetAudioOutputConfigurationResponse = soap_tmp___ns8__SetAudioOutputConfigurationResponse->ns8__SetAudioOutputConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _ns8__SetAudioDecoderConfiguration *ns8__SetAudioDecoderConfiguration, ns8__SetConfigurationResponse &ns8__SetAudioDecoderConfigurationResponse)
{	struct soap *soap = this;
	struct __ns8__SetAudioDecoderConfiguration soap_tmp___ns8__SetAudioDecoderConfiguration;
	struct __ns8__SetAudioDecoderConfigurationResponse *soap_tmp___ns8__SetAudioDecoderConfigurationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfiguration";
	soap_tmp___ns8__SetAudioDecoderConfiguration.ns8__SetAudioDecoderConfiguration = ns8__SetAudioDecoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__SetAudioDecoderConfiguration(soap, &soap_tmp___ns8__SetAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SetAudioDecoderConfiguration(soap, &soap_tmp___ns8__SetAudioDecoderConfiguration, "-ns8:SetAudioDecoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SetAudioDecoderConfiguration(soap, &soap_tmp___ns8__SetAudioDecoderConfiguration, "-ns8:SetAudioDecoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns8__SetConfigurationResponse*>(&ns8__SetAudioDecoderConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__SetAudioDecoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns8__SetAudioDecoderConfigurationResponse = soap_get___ns8__SetAudioDecoderConfigurationResponse(soap, NULL, "-ns8:SetAudioDecoderConfigurationResponse", NULL);
	if (!soap_tmp___ns8__SetAudioDecoderConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns8__SetAudioDecoderConfigurationResponse = soap_tmp___ns8__SetAudioDecoderConfigurationResponse->ns8__SetAudioDecoderConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoSourceConfigurationOptions(const char *endpoint, const char *soap_action, ns8__GetConfiguration *ns8__GetVideoSourceConfigurationOptions, _ns8__GetVideoSourceConfigurationOptionsResponse &ns8__GetVideoSourceConfigurationOptionsResponse)
{	struct soap *soap = this;
	struct __ns8__GetVideoSourceConfigurationOptions soap_tmp___ns8__GetVideoSourceConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationOptions/";
	soap_tmp___ns8__GetVideoSourceConfigurationOptions.ns8__GetVideoSourceConfigurationOptions = ns8__GetVideoSourceConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns8__GetVideoSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns8__GetVideoSourceConfigurationOptions, "-ns8:GetVideoSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns8__GetVideoSourceConfigurationOptions, "-ns8:GetVideoSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetVideoSourceConfigurationOptionsResponse*>(&ns8__GetVideoSourceConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetVideoSourceConfigurationOptionsResponse.soap_get(soap, "ns8:GetVideoSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoEncoderConfigurationOptions(const char *endpoint, const char *soap_action, ns8__GetConfiguration *ns8__GetVideoEncoderConfigurationOptions, _ns8__GetVideoEncoderConfigurationOptionsResponse &ns8__GetVideoEncoderConfigurationOptionsResponse)
{	struct soap *soap = this;
	struct __ns8__GetVideoEncoderConfigurationOptions soap_tmp___ns8__GetVideoEncoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptions";
	soap_tmp___ns8__GetVideoEncoderConfigurationOptions.ns8__GetVideoEncoderConfigurationOptions = ns8__GetVideoEncoderConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___ns8__GetVideoEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___ns8__GetVideoEncoderConfigurationOptions, "-ns8:GetVideoEncoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___ns8__GetVideoEncoderConfigurationOptions, "-ns8:GetVideoEncoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetVideoEncoderConfigurationOptionsResponse*>(&ns8__GetVideoEncoderConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetVideoEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetVideoEncoderConfigurationOptionsResponse.soap_get(soap, "ns8:GetVideoEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioSourceConfigurationOptions(const char *endpoint, const char *soap_action, ns8__GetConfiguration *ns8__GetAudioSourceConfigurationOptions, _ns8__GetAudioSourceConfigurationOptionsResponse &ns8__GetAudioSourceConfigurationOptionsResponse)
{	struct soap *soap = this;
	struct __ns8__GetAudioSourceConfigurationOptions soap_tmp___ns8__GetAudioSourceConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptions";
	soap_tmp___ns8__GetAudioSourceConfigurationOptions.ns8__GetAudioSourceConfigurationOptions = ns8__GetAudioSourceConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns8__GetAudioSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns8__GetAudioSourceConfigurationOptions, "-ns8:GetAudioSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns8__GetAudioSourceConfigurationOptions, "-ns8:GetAudioSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetAudioSourceConfigurationOptionsResponse*>(&ns8__GetAudioSourceConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetAudioSourceConfigurationOptionsResponse.soap_get(soap, "ns8:GetAudioSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioEncoderConfigurationOptions(const char *endpoint, const char *soap_action, ns8__GetConfiguration *ns8__GetAudioEncoderConfigurationOptions, _ns8__GetAudioEncoderConfigurationOptionsResponse &ns8__GetAudioEncoderConfigurationOptionsResponse)
{	struct soap *soap = this;
	struct __ns8__GetAudioEncoderConfigurationOptions soap_tmp___ns8__GetAudioEncoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptions";
	soap_tmp___ns8__GetAudioEncoderConfigurationOptions.ns8__GetAudioEncoderConfigurationOptions = ns8__GetAudioEncoderConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___ns8__GetAudioEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___ns8__GetAudioEncoderConfigurationOptions, "-ns8:GetAudioEncoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___ns8__GetAudioEncoderConfigurationOptions, "-ns8:GetAudioEncoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetAudioEncoderConfigurationOptionsResponse*>(&ns8__GetAudioEncoderConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetAudioEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetAudioEncoderConfigurationOptionsResponse.soap_get(soap, "ns8:GetAudioEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetMetadataConfigurationOptions(const char *endpoint, const char *soap_action, ns8__GetConfiguration *ns8__GetMetadataConfigurationOptions, _ns8__GetMetadataConfigurationOptionsResponse &ns8__GetMetadataConfigurationOptionsResponse)
{	struct soap *soap = this;
	struct __ns8__GetMetadataConfigurationOptions soap_tmp___ns8__GetMetadataConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptions";
	soap_tmp___ns8__GetMetadataConfigurationOptions.ns8__GetMetadataConfigurationOptions = ns8__GetMetadataConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetMetadataConfigurationOptions(soap, &soap_tmp___ns8__GetMetadataConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetMetadataConfigurationOptions(soap, &soap_tmp___ns8__GetMetadataConfigurationOptions, "-ns8:GetMetadataConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetMetadataConfigurationOptions(soap, &soap_tmp___ns8__GetMetadataConfigurationOptions, "-ns8:GetMetadataConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetMetadataConfigurationOptionsResponse*>(&ns8__GetMetadataConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetMetadataConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetMetadataConfigurationOptionsResponse.soap_get(soap, "ns8:GetMetadataConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioOutputConfigurationOptions(const char *endpoint, const char *soap_action, ns8__GetConfiguration *ns8__GetAudioOutputConfigurationOptions, _ns8__GetAudioOutputConfigurationOptionsResponse &ns8__GetAudioOutputConfigurationOptionsResponse)
{	struct soap *soap = this;
	struct __ns8__GetAudioOutputConfigurationOptions soap_tmp___ns8__GetAudioOutputConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptions";
	soap_tmp___ns8__GetAudioOutputConfigurationOptions.ns8__GetAudioOutputConfigurationOptions = ns8__GetAudioOutputConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns8__GetAudioOutputConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns8__GetAudioOutputConfigurationOptions, "-ns8:GetAudioOutputConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns8__GetAudioOutputConfigurationOptions, "-ns8:GetAudioOutputConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetAudioOutputConfigurationOptionsResponse*>(&ns8__GetAudioOutputConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetAudioOutputConfigurationOptionsResponse.soap_get(soap, "ns8:GetAudioOutputConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioDecoderConfigurationOptions(const char *endpoint, const char *soap_action, ns8__GetConfiguration *ns8__GetAudioDecoderConfigurationOptions, _ns8__GetAudioDecoderConfigurationOptionsResponse &ns8__GetAudioDecoderConfigurationOptionsResponse)
{	struct soap *soap = this;
	struct __ns8__GetAudioDecoderConfigurationOptions soap_tmp___ns8__GetAudioDecoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptions";
	soap_tmp___ns8__GetAudioDecoderConfigurationOptions.ns8__GetAudioDecoderConfigurationOptions = ns8__GetAudioDecoderConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___ns8__GetAudioDecoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___ns8__GetAudioDecoderConfigurationOptions, "-ns8:GetAudioDecoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___ns8__GetAudioDecoderConfigurationOptions, "-ns8:GetAudioDecoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetAudioDecoderConfigurationOptionsResponse*>(&ns8__GetAudioDecoderConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetAudioDecoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetAudioDecoderConfigurationOptionsResponse.soap_get(soap, "ns8:GetAudioDecoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoEncoderInstances(const char *endpoint, const char *soap_action, _ns8__GetVideoEncoderInstances *ns8__GetVideoEncoderInstances, _ns8__GetVideoEncoderInstancesResponse &ns8__GetVideoEncoderInstancesResponse)
{	struct soap *soap = this;
	struct __ns8__GetVideoEncoderInstances soap_tmp___ns8__GetVideoEncoderInstances;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderInstances";
	soap_tmp___ns8__GetVideoEncoderInstances.ns8__GetVideoEncoderInstances = ns8__GetVideoEncoderInstances;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetVideoEncoderInstances(soap, &soap_tmp___ns8__GetVideoEncoderInstances);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetVideoEncoderInstances(soap, &soap_tmp___ns8__GetVideoEncoderInstances, "-ns8:GetVideoEncoderInstances", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetVideoEncoderInstances(soap, &soap_tmp___ns8__GetVideoEncoderInstances, "-ns8:GetVideoEncoderInstances", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetVideoEncoderInstancesResponse*>(&ns8__GetVideoEncoderInstancesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetVideoEncoderInstancesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetVideoEncoderInstancesResponse.soap_get(soap, "ns8:GetVideoEncoderInstancesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetStreamUri(const char *endpoint, const char *soap_action, _ns8__GetStreamUri *ns8__GetStreamUri, _ns8__GetStreamUriResponse &ns8__GetStreamUriResponse)
{	struct soap *soap = this;
	struct __ns8__GetStreamUri soap_tmp___ns8__GetStreamUri;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetStreamUri";
	soap_tmp___ns8__GetStreamUri.ns8__GetStreamUri = ns8__GetStreamUri;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetStreamUri(soap, &soap_tmp___ns8__GetStreamUri);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetStreamUri(soap, &soap_tmp___ns8__GetStreamUri, "-ns8:GetStreamUri", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetStreamUri(soap, &soap_tmp___ns8__GetStreamUri, "-ns8:GetStreamUri", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetStreamUriResponse*>(&ns8__GetStreamUriResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetStreamUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetStreamUriResponse.soap_get(soap, "ns8:GetStreamUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::StartMulticastStreaming(const char *endpoint, const char *soap_action, ns8__StartStopMulticastStreaming *ns8__StartMulticastStreaming, ns8__SetConfigurationResponse &ns8__StartMulticastStreamingResponse)
{	struct soap *soap = this;
	struct __ns8__StartMulticastStreaming soap_tmp___ns8__StartMulticastStreaming;
	struct __ns8__StartMulticastStreamingResponse *soap_tmp___ns8__StartMulticastStreamingResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/StartMulticastStreaming";
	soap_tmp___ns8__StartMulticastStreaming.ns8__StartMulticastStreaming = ns8__StartMulticastStreaming;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__StartMulticastStreaming(soap, &soap_tmp___ns8__StartMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__StartMulticastStreaming(soap, &soap_tmp___ns8__StartMulticastStreaming, "-ns8:StartMulticastStreaming", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__StartMulticastStreaming(soap, &soap_tmp___ns8__StartMulticastStreaming, "-ns8:StartMulticastStreaming", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns8__SetConfigurationResponse*>(&ns8__StartMulticastStreamingResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__StartMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns8__StartMulticastStreamingResponse = soap_get___ns8__StartMulticastStreamingResponse(soap, NULL, "-ns8:StartMulticastStreamingResponse", NULL);
	if (!soap_tmp___ns8__StartMulticastStreamingResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns8__StartMulticastStreamingResponse = soap_tmp___ns8__StartMulticastStreamingResponse->ns8__StartMulticastStreamingResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::StopMulticastStreaming(const char *endpoint, const char *soap_action, ns8__StartStopMulticastStreaming *ns8__StopMulticastStreaming, ns8__SetConfigurationResponse &ns8__StopMulticastStreamingResponse)
{	struct soap *soap = this;
	struct __ns8__StopMulticastStreaming soap_tmp___ns8__StopMulticastStreaming;
	struct __ns8__StopMulticastStreamingResponse *soap_tmp___ns8__StopMulticastStreamingResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/StopMulticastStreaming";
	soap_tmp___ns8__StopMulticastStreaming.ns8__StopMulticastStreaming = ns8__StopMulticastStreaming;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__StopMulticastStreaming(soap, &soap_tmp___ns8__StopMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__StopMulticastStreaming(soap, &soap_tmp___ns8__StopMulticastStreaming, "-ns8:StopMulticastStreaming", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__StopMulticastStreaming(soap, &soap_tmp___ns8__StopMulticastStreaming, "-ns8:StopMulticastStreaming", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns8__SetConfigurationResponse*>(&ns8__StopMulticastStreamingResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__StopMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns8__StopMulticastStreamingResponse = soap_get___ns8__StopMulticastStreamingResponse(soap, NULL, "-ns8:StopMulticastStreamingResponse", NULL);
	if (!soap_tmp___ns8__StopMulticastStreamingResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns8__StopMulticastStreamingResponse = soap_tmp___ns8__StopMulticastStreamingResponse->ns8__StopMulticastStreamingResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::SetSynchronizationPoint(const char *endpoint, const char *soap_action, _ns8__SetSynchronizationPoint *ns8__SetSynchronizationPoint, _ns8__SetSynchronizationPointResponse &ns8__SetSynchronizationPointResponse)
{	struct soap *soap = this;
	struct __ns8__SetSynchronizationPoint soap_tmp___ns8__SetSynchronizationPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPoint";
	soap_tmp___ns8__SetSynchronizationPoint.ns8__SetSynchronizationPoint = ns8__SetSynchronizationPoint;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__SetSynchronizationPoint(soap, &soap_tmp___ns8__SetSynchronizationPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SetSynchronizationPoint(soap, &soap_tmp___ns8__SetSynchronizationPoint, "-ns8:SetSynchronizationPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SetSynchronizationPoint(soap, &soap_tmp___ns8__SetSynchronizationPoint, "-ns8:SetSynchronizationPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__SetSynchronizationPointResponse*>(&ns8__SetSynchronizationPointResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__SetSynchronizationPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__SetSynchronizationPointResponse.soap_get(soap, "ns8:SetSynchronizationPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetSnapshotUri(const char *endpoint, const char *soap_action, _ns8__GetSnapshotUri *ns8__GetSnapshotUri, _ns8__GetSnapshotUriResponse &ns8__GetSnapshotUriResponse)
{	struct soap *soap = this;
	struct __ns8__GetSnapshotUri soap_tmp___ns8__GetSnapshotUri;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetSnapshotUri";
	soap_tmp___ns8__GetSnapshotUri.ns8__GetSnapshotUri = ns8__GetSnapshotUri;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetSnapshotUri(soap, &soap_tmp___ns8__GetSnapshotUri);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetSnapshotUri(soap, &soap_tmp___ns8__GetSnapshotUri, "-ns8:GetSnapshotUri", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetSnapshotUri(soap, &soap_tmp___ns8__GetSnapshotUri, "-ns8:GetSnapshotUri", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetSnapshotUriResponse*>(&ns8__GetSnapshotUriResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetSnapshotUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetSnapshotUriResponse.soap_get(soap, "ns8:GetSnapshotUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoSourceModes(const char *endpoint, const char *soap_action, _ns8__GetVideoSourceModes *ns8__GetVideoSourceModes, _ns8__GetVideoSourceModesResponse &ns8__GetVideoSourceModesResponse)
{	struct soap *soap = this;
	struct __ns8__GetVideoSourceModes soap_tmp___ns8__GetVideoSourceModes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModes";
	soap_tmp___ns8__GetVideoSourceModes.ns8__GetVideoSourceModes = ns8__GetVideoSourceModes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetVideoSourceModes(soap, &soap_tmp___ns8__GetVideoSourceModes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetVideoSourceModes(soap, &soap_tmp___ns8__GetVideoSourceModes, "-ns8:GetVideoSourceModes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetVideoSourceModes(soap, &soap_tmp___ns8__GetVideoSourceModes, "-ns8:GetVideoSourceModes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetVideoSourceModesResponse*>(&ns8__GetVideoSourceModesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetVideoSourceModesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetVideoSourceModesResponse.soap_get(soap, "ns8:GetVideoSourceModesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetVideoSourceMode(const char *endpoint, const char *soap_action, _ns8__SetVideoSourceMode *ns8__SetVideoSourceMode, _ns8__SetVideoSourceModeResponse &ns8__SetVideoSourceModeResponse)
{	struct soap *soap = this;
	struct __ns8__SetVideoSourceMode soap_tmp___ns8__SetVideoSourceMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceMode";
	soap_tmp___ns8__SetVideoSourceMode.ns8__SetVideoSourceMode = ns8__SetVideoSourceMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__SetVideoSourceMode(soap, &soap_tmp___ns8__SetVideoSourceMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SetVideoSourceMode(soap, &soap_tmp___ns8__SetVideoSourceMode, "-ns8:SetVideoSourceMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SetVideoSourceMode(soap, &soap_tmp___ns8__SetVideoSourceMode, "-ns8:SetVideoSourceMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__SetVideoSourceModeResponse*>(&ns8__SetVideoSourceModeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__SetVideoSourceModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__SetVideoSourceModeResponse.soap_get(soap, "ns8:SetVideoSourceModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetOSDs(const char *endpoint, const char *soap_action, _ns8__GetOSDs *ns8__GetOSDs, _ns8__GetOSDsResponse &ns8__GetOSDsResponse)
{	struct soap *soap = this;
	struct __ns8__GetOSDs soap_tmp___ns8__GetOSDs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetOSDs";
	soap_tmp___ns8__GetOSDs.ns8__GetOSDs = ns8__GetOSDs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetOSDs(soap, &soap_tmp___ns8__GetOSDs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetOSDs(soap, &soap_tmp___ns8__GetOSDs, "-ns8:GetOSDs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetOSDs(soap, &soap_tmp___ns8__GetOSDs, "-ns8:GetOSDs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetOSDsResponse*>(&ns8__GetOSDsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetOSDsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetOSDsResponse.soap_get(soap, "ns8:GetOSDsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetOSDOptions(const char *endpoint, const char *soap_action, _ns8__GetOSDOptions *ns8__GetOSDOptions, _ns8__GetOSDOptionsResponse &ns8__GetOSDOptionsResponse)
{	struct soap *soap = this;
	struct __ns8__GetOSDOptions soap_tmp___ns8__GetOSDOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetOSDOptions";
	soap_tmp___ns8__GetOSDOptions.ns8__GetOSDOptions = ns8__GetOSDOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetOSDOptions(soap, &soap_tmp___ns8__GetOSDOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetOSDOptions(soap, &soap_tmp___ns8__GetOSDOptions, "-ns8:GetOSDOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetOSDOptions(soap, &soap_tmp___ns8__GetOSDOptions, "-ns8:GetOSDOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetOSDOptionsResponse*>(&ns8__GetOSDOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetOSDOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetOSDOptionsResponse.soap_get(soap, "ns8:GetOSDOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetOSD(const char *endpoint, const char *soap_action, _ns8__SetOSD *ns8__SetOSD, ns8__SetConfigurationResponse &ns8__SetOSDResponse)
{	struct soap *soap = this;
	struct __ns8__SetOSD soap_tmp___ns8__SetOSD;
	struct __ns8__SetOSDResponse *soap_tmp___ns8__SetOSDResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetOSD";
	soap_tmp___ns8__SetOSD.ns8__SetOSD = ns8__SetOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__SetOSD(soap, &soap_tmp___ns8__SetOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SetOSD(soap, &soap_tmp___ns8__SetOSD, "-ns8:SetOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SetOSD(soap, &soap_tmp___ns8__SetOSD, "-ns8:SetOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns8__SetConfigurationResponse*>(&ns8__SetOSDResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__SetOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns8__SetOSDResponse = soap_get___ns8__SetOSDResponse(soap, NULL, "-ns8:SetOSDResponse", NULL);
	if (!soap_tmp___ns8__SetOSDResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns8__SetOSDResponse = soap_tmp___ns8__SetOSDResponse->ns8__SetOSDResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::CreateOSD(const char *endpoint, const char *soap_action, _ns8__CreateOSD *ns8__CreateOSD, _ns8__CreateOSDResponse &ns8__CreateOSDResponse)
{	struct soap *soap = this;
	struct __ns8__CreateOSD soap_tmp___ns8__CreateOSD;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateOSD";
	soap_tmp___ns8__CreateOSD.ns8__CreateOSD = ns8__CreateOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__CreateOSD(soap, &soap_tmp___ns8__CreateOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__CreateOSD(soap, &soap_tmp___ns8__CreateOSD, "-ns8:CreateOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__CreateOSD(soap, &soap_tmp___ns8__CreateOSD, "-ns8:CreateOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__CreateOSDResponse*>(&ns8__CreateOSDResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__CreateOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__CreateOSDResponse.soap_get(soap, "ns8:CreateOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::DeleteOSD(const char *endpoint, const char *soap_action, _ns8__DeleteOSD *ns8__DeleteOSD, ns8__SetConfigurationResponse &ns8__DeleteOSDResponse)
{	struct soap *soap = this;
	struct __ns8__DeleteOSD soap_tmp___ns8__DeleteOSD;
	struct __ns8__DeleteOSDResponse *soap_tmp___ns8__DeleteOSDResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteOSD";
	soap_tmp___ns8__DeleteOSD.ns8__DeleteOSD = ns8__DeleteOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__DeleteOSD(soap, &soap_tmp___ns8__DeleteOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__DeleteOSD(soap, &soap_tmp___ns8__DeleteOSD, "-ns8:DeleteOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__DeleteOSD(soap, &soap_tmp___ns8__DeleteOSD, "-ns8:DeleteOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns8__SetConfigurationResponse*>(&ns8__DeleteOSDResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__DeleteOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns8__DeleteOSDResponse = soap_get___ns8__DeleteOSDResponse(soap, NULL, "-ns8:DeleteOSDResponse", NULL);
	if (!soap_tmp___ns8__DeleteOSDResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns8__DeleteOSDResponse = soap_tmp___ns8__DeleteOSDResponse->ns8__DeleteOSDResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::GetMasks(const char *endpoint, const char *soap_action, _ns8__GetMasks *ns8__GetMasks, _ns8__GetMasksResponse &ns8__GetMasksResponse)
{	struct soap *soap = this;
	struct __ns8__GetMasks soap_tmp___ns8__GetMasks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMasks";
	soap_tmp___ns8__GetMasks.ns8__GetMasks = ns8__GetMasks;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetMasks(soap, &soap_tmp___ns8__GetMasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetMasks(soap, &soap_tmp___ns8__GetMasks, "-ns8:GetMasks", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetMasks(soap, &soap_tmp___ns8__GetMasks, "-ns8:GetMasks", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetMasksResponse*>(&ns8__GetMasksResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetMasksResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetMasksResponse.soap_get(soap, "ns8:GetMasksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetMaskOptions(const char *endpoint, const char *soap_action, _ns8__GetMaskOptions *ns8__GetMaskOptions, _ns8__GetMaskOptionsResponse &ns8__GetMaskOptionsResponse)
{	struct soap *soap = this;
	struct __ns8__GetMaskOptions soap_tmp___ns8__GetMaskOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMaskOptions";
	soap_tmp___ns8__GetMaskOptions.ns8__GetMaskOptions = ns8__GetMaskOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__GetMaskOptions(soap, &soap_tmp___ns8__GetMaskOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetMaskOptions(soap, &soap_tmp___ns8__GetMaskOptions, "-ns8:GetMaskOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetMaskOptions(soap, &soap_tmp___ns8__GetMaskOptions, "-ns8:GetMaskOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__GetMaskOptionsResponse*>(&ns8__GetMaskOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__GetMaskOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetMaskOptionsResponse.soap_get(soap, "ns8:GetMaskOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetMask(const char *endpoint, const char *soap_action, _ns8__SetMask *ns8__SetMask, ns8__SetConfigurationResponse &ns8__SetMaskResponse)
{	struct soap *soap = this;
	struct __ns8__SetMask soap_tmp___ns8__SetMask;
	struct __ns8__SetMaskResponse *soap_tmp___ns8__SetMaskResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetMask";
	soap_tmp___ns8__SetMask.ns8__SetMask = ns8__SetMask;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__SetMask(soap, &soap_tmp___ns8__SetMask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SetMask(soap, &soap_tmp___ns8__SetMask, "-ns8:SetMask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SetMask(soap, &soap_tmp___ns8__SetMask, "-ns8:SetMask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns8__SetConfigurationResponse*>(&ns8__SetMaskResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__SetMaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns8__SetMaskResponse = soap_get___ns8__SetMaskResponse(soap, NULL, "-ns8:SetMaskResponse", NULL);
	if (!soap_tmp___ns8__SetMaskResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns8__SetMaskResponse = soap_tmp___ns8__SetMaskResponse->ns8__SetMaskResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::CreateMask(const char *endpoint, const char *soap_action, _ns8__CreateMask *ns8__CreateMask, _ns8__CreateMaskResponse &ns8__CreateMaskResponse)
{	struct soap *soap = this;
	struct __ns8__CreateMask soap_tmp___ns8__CreateMask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateMask";
	soap_tmp___ns8__CreateMask.ns8__CreateMask = ns8__CreateMask;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__CreateMask(soap, &soap_tmp___ns8__CreateMask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__CreateMask(soap, &soap_tmp___ns8__CreateMask, "-ns8:CreateMask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__CreateMask(soap, &soap_tmp___ns8__CreateMask, "-ns8:CreateMask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns8__CreateMaskResponse*>(&ns8__CreateMaskResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__CreateMaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__CreateMaskResponse.soap_get(soap, "ns8:CreateMaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::DeleteMask(const char *endpoint, const char *soap_action, _ns8__DeleteMask *ns8__DeleteMask, ns8__SetConfigurationResponse &ns8__DeleteMaskResponse)
{	struct soap *soap = this;
	struct __ns8__DeleteMask soap_tmp___ns8__DeleteMask;
	struct __ns8__DeleteMaskResponse *soap_tmp___ns8__DeleteMaskResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteMask";
	soap_tmp___ns8__DeleteMask.ns8__DeleteMask = ns8__DeleteMask;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns8__DeleteMask(soap, &soap_tmp___ns8__DeleteMask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__DeleteMask(soap, &soap_tmp___ns8__DeleteMask, "-ns8:DeleteMask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__DeleteMask(soap, &soap_tmp___ns8__DeleteMask, "-ns8:DeleteMask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns8__SetConfigurationResponse*>(&ns8__DeleteMaskResponse)) // NULL ref?
		return soap_closesock(soap);
	ns8__DeleteMaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns8__DeleteMaskResponse = soap_get___ns8__DeleteMaskResponse(soap, NULL, "-ns8:DeleteMaskResponse", NULL);
	if (!soap_tmp___ns8__DeleteMaskResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns8__DeleteMaskResponse = soap_tmp___ns8__DeleteMaskResponse->ns8__DeleteMaskResponse;
	return soap_closesock(soap);
}
/* End of client proxy code */
